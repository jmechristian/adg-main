# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = { allow: public }
} # FOR TESTING ONLY!
enum Role {
  ADMIN
  EDITOR
  VIEWER
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}

type User @model {
  id: ID!
  name: String!
  email: String!
  role: Role!
}

type Location @model {
  id: ID!
  name: String
  address: String
  description: String
  latitude: Float!
  longitude: Float!
}

type FeaturedProject @model {
  id: ID!
  project: Project @belongsTo
  displayOrder: Int
  department: Department @belongsTo
}

type Gallery @model {
  id: ID!
  images: [ImageObject] @hasMany
  project: Project @belongsTo
}

type Project @model {
  id: ID!
  oldId: String
  name: String!
  description: String
  location: Location @hasOne
  locationString: String
  createdBy: User @hasOne
  lastUpdatedBy: User @hasOne
  featured: Boolean
  link: String
  slug: String
  quote: String
  quoteAttribution: String
  quotes: [Quote] @hasMany
  collaborators: String
  size: String
  gridOrder: Int
  status: Status!
  gallery: Gallery @hasOne
  departments: [Department] @manyToMany(relationName: "ProjectDepartments")
  subcategories: [Subcategory] @manyToMany(relationName: "ProjectSubcategories")
  building_type: [BuildingType]
    @manyToMany(relationName: "ProjectBuildingTypes")
  project_type: [ProjectType] @manyToMany(relationName: "ProjectProjectTypes")
  displayOrder: Int
  previewLocation: String
  featuredProjects: [FeaturedProject] @hasMany
  subcategoryProjects: [SubcategoryProject] @hasMany
}

type Quote @model {
  id: ID!
  text: String!
  attribution: String
  project: Project @belongsTo
  displayOrder: Int
}

type Department @model {
  id: ID!
  name: String!
  projects: [Project] @manyToMany(relationName: "ProjectDepartments")
  subcategories: [Subcategory]
    @manyToMany(relationName: "DepartmentSubcategories")
  displayOrder: Int
  featuredProjects: [FeaturedProject] @hasMany
}

type ImageObject @model {
  id: ID!
  url: String!
  alt: String!
  caption: String
  gallery: Gallery @belongsTo
  order: Int
  centerX: Float
  centerY: Float
  zoom: Float
}

type Subcategory @model {
  id: ID!
  name: String!
  projects: [Project] @manyToMany(relationName: "ProjectSubcategories")
  subcategoryProjects: [SubcategoryProject] @hasMany
  departments: [Department] @manyToMany(relationName: "DepartmentSubcategories")
  displayOrder: Int
}

type SubcategoryProject @model {
  id: ID!
  project: Project @belongsTo
  subcategory: Subcategory @belongsTo
  displayOrder: Int
}

type BuildingType @model {
  id: ID!
  name: String!
  projects: [Project] @manyToMany(relationName: "ProjectBuildingTypes")
  displayOrder: Int
}

type ProjectType @model {
  id: ID!
  name: String!
  projects: [Project] @manyToMany(relationName: "ProjectProjectTypes")
  displayOrder: Int
}
